/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type {
  RMRKCollectionMetadataABI,
  RMRKCollectionMetadataABIInterface,
} from "../RMRKCollectionMetadataABI";
import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
    ],
    name: "RMRKCollectionMetdataSet",
    type: "event",
  },
  {
    inputs: [],
    name: "collectionMetadata",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

export class RMRKCollectionMetadataABI__factory {
  static readonly abi = _abi;
  static createInterface(): RMRKCollectionMetadataABIInterface {
    return new utils.Interface(_abi) as RMRKCollectionMetadataABIInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RMRKCollectionMetadataABI {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RMRKCollectionMetadataABI;
  }
}
