/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "./common";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";

export declare namespace IDiamondCut {
  export type FacetCutStruct = {
    facetAddress: PromiseOrValue<string>;
    action: PromiseOrValue<BigNumberish>;
    functionSelectors: PromiseOrValue<BytesLike>[];
  };

  export type FacetCutStructOutput = [string, number, string[]] & {
    facetAddress: string;
    action: number;
    functionSelectors: string[];
  };
}

export declare namespace IPOAPFactory {
  export type ConstructParamsStruct = {
    diamondCutFacetAddress: PromiseOrValue<string>;
    diamondLoupeFacetAddress: PromiseOrValue<string>;
    nestableFacetAddress: PromiseOrValue<string>;
    multiAssetFacetAddress: PromiseOrValue<string>;
    equippableFacetAddress: PromiseOrValue<string>;
    collectionMetadataFacetAddress: PromiseOrValue<string>;
    initContractAddress: PromiseOrValue<string>;
    implContractAddress: PromiseOrValue<string>;
    poapMintModuleAddress: PromiseOrValue<string>;
    travelNotesAddress: PromiseOrValue<string>;
    cuts: IDiamondCut.FacetCutStruct[];
  };

  export type ConstructParamsStructOutput = [
    string,
    string,
    string,
    string,
    string,
    string,
    string,
    string,
    string,
    string,
    IDiamondCut.FacetCutStructOutput[]
  ] & {
    diamondCutFacetAddress: string;
    diamondLoupeFacetAddress: string;
    nestableFacetAddress: string;
    multiAssetFacetAddress: string;
    equippableFacetAddress: string;
    collectionMetadataFacetAddress: string;
    initContractAddress: string;
    implContractAddress: string;
    poapMintModuleAddress: string;
    travelNotesAddress: string;
    cuts: IDiamondCut.FacetCutStructOutput[];
  };
}

export declare namespace POAPInit {
  export type InitStructStruct = {
    name: PromiseOrValue<string>;
    symbol: PromiseOrValue<string>;
    fallbackURI: PromiseOrValue<string>;
    collectionMetadataURI: PromiseOrValue<string>;
  };

  export type InitStructStructOutput = [string, string, string, string] & {
    name: string;
    symbol: string;
    fallbackURI: string;
    collectionMetadataURI: string;
  };
}

export interface POAPFactoryABIInterface extends utils.Interface {
  functions: {
    "collectionMetadataAddress()": FunctionFragment;
    "cuts()": FunctionFragment;
    "deployPOAP((string,string,string,string))": FunctionFragment;
    "equippableFacetAddress()": FunctionFragment;
    "implContractAddress()": FunctionFragment;
    "initContractAddress()": FunctionFragment;
    "multiAssetFacetAddress()": FunctionFragment;
    "nestableFacetAddress()": FunctionFragment;
    "poapMintModuleAddress()": FunctionFragment;
    "travelNotesAddress()": FunctionFragment;
    "version()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "collectionMetadataAddress"
      | "cuts"
      | "deployPOAP"
      | "equippableFacetAddress"
      | "implContractAddress"
      | "initContractAddress"
      | "multiAssetFacetAddress"
      | "nestableFacetAddress"
      | "poapMintModuleAddress"
      | "travelNotesAddress"
      | "version"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "collectionMetadataAddress",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "cuts", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "deployPOAP",
    values: [POAPInit.InitStructStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "equippableFacetAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "implContractAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "initContractAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "multiAssetFacetAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "nestableFacetAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "poapMintModuleAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "travelNotesAddress",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "version", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "collectionMetadataAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "cuts", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "deployPOAP", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "equippableFacetAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "implContractAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initContractAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "multiAssetFacetAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "nestableFacetAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "poapMintModuleAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "travelNotesAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "version", data: BytesLike): Result;

  events: {
    "POAPCreated(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "POAPCreated"): EventFragment;
}

export interface POAPCreatedEventObject {
  instanceAddress: string;
  deployer: string;
}
export type POAPCreatedEvent = TypedEvent<
  [string, string],
  POAPCreatedEventObject
>;

export type POAPCreatedEventFilter = TypedEventFilter<POAPCreatedEvent>;

export interface POAPFactoryABI extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: POAPFactoryABIInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    collectionMetadataAddress(overrides?: CallOverrides): Promise<[string]>;

    cuts(
      overrides?: CallOverrides
    ): Promise<[IDiamondCut.FacetCutStructOutput[]]>;

    deployPOAP(
      initStruct: POAPInit.InitStructStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    equippableFacetAddress(overrides?: CallOverrides): Promise<[string]>;

    implContractAddress(overrides?: CallOverrides): Promise<[string]>;

    initContractAddress(overrides?: CallOverrides): Promise<[string]>;

    multiAssetFacetAddress(overrides?: CallOverrides): Promise<[string]>;

    nestableFacetAddress(overrides?: CallOverrides): Promise<[string]>;

    poapMintModuleAddress(overrides?: CallOverrides): Promise<[string]>;

    travelNotesAddress(overrides?: CallOverrides): Promise<[string]>;

    version(overrides?: CallOverrides): Promise<[string]>;
  };

  collectionMetadataAddress(overrides?: CallOverrides): Promise<string>;

  cuts(overrides?: CallOverrides): Promise<IDiamondCut.FacetCutStructOutput[]>;

  deployPOAP(
    initStruct: POAPInit.InitStructStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  equippableFacetAddress(overrides?: CallOverrides): Promise<string>;

  implContractAddress(overrides?: CallOverrides): Promise<string>;

  initContractAddress(overrides?: CallOverrides): Promise<string>;

  multiAssetFacetAddress(overrides?: CallOverrides): Promise<string>;

  nestableFacetAddress(overrides?: CallOverrides): Promise<string>;

  poapMintModuleAddress(overrides?: CallOverrides): Promise<string>;

  travelNotesAddress(overrides?: CallOverrides): Promise<string>;

  version(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    collectionMetadataAddress(overrides?: CallOverrides): Promise<string>;

    cuts(
      overrides?: CallOverrides
    ): Promise<IDiamondCut.FacetCutStructOutput[]>;

    deployPOAP(
      initStruct: POAPInit.InitStructStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    equippableFacetAddress(overrides?: CallOverrides): Promise<string>;

    implContractAddress(overrides?: CallOverrides): Promise<string>;

    initContractAddress(overrides?: CallOverrides): Promise<string>;

    multiAssetFacetAddress(overrides?: CallOverrides): Promise<string>;

    nestableFacetAddress(overrides?: CallOverrides): Promise<string>;

    poapMintModuleAddress(overrides?: CallOverrides): Promise<string>;

    travelNotesAddress(overrides?: CallOverrides): Promise<string>;

    version(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    "POAPCreated(address,address)"(
      instanceAddress?: null,
      deployer?: null
    ): POAPCreatedEventFilter;
    POAPCreated(
      instanceAddress?: null,
      deployer?: null
    ): POAPCreatedEventFilter;
  };

  estimateGas: {
    collectionMetadataAddress(overrides?: CallOverrides): Promise<BigNumber>;

    cuts(overrides?: CallOverrides): Promise<BigNumber>;

    deployPOAP(
      initStruct: POAPInit.InitStructStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    equippableFacetAddress(overrides?: CallOverrides): Promise<BigNumber>;

    implContractAddress(overrides?: CallOverrides): Promise<BigNumber>;

    initContractAddress(overrides?: CallOverrides): Promise<BigNumber>;

    multiAssetFacetAddress(overrides?: CallOverrides): Promise<BigNumber>;

    nestableFacetAddress(overrides?: CallOverrides): Promise<BigNumber>;

    poapMintModuleAddress(overrides?: CallOverrides): Promise<BigNumber>;

    travelNotesAddress(overrides?: CallOverrides): Promise<BigNumber>;

    version(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    collectionMetadataAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    cuts(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    deployPOAP(
      initStruct: POAPInit.InitStructStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    equippableFacetAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    implContractAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initContractAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    multiAssetFacetAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    nestableFacetAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    poapMintModuleAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    travelNotesAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    version(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
